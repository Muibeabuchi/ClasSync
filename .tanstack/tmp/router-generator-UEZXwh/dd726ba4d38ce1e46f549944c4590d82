/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as OnboardRouteRouteImport } from './routes/_onboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardOnboardRouteImport } from './routes/_onboard/onboard'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthOnboardStudentRouteImport } from './routes/_auth/onboard.student'
import { Route as AuthOnboardLecturerRouteImport } from './routes/_auth/onboard.lecturer'
import { Route as AuthOnboardRoleRoleRouteImport } from './routes/_auth/onboard.role.$role'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardRouteRoute = OnboardRouteRouteImport.update({
  id: '/_onboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardOnboardRoute = OnboardOnboardRouteImport.update({
  id: '/onboard',
  path: '/onboard',
  getParentRoute: () => OnboardRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnboardStudentRoute = AuthOnboardStudentRouteImport.update({
  id: '/_auth/onboard/student',
  path: '/onboard/student',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnboardLecturerRoute = AuthOnboardLecturerRouteImport.update({
  id: '/_auth/onboard/lecturer',
  path: '/onboard/lecturer',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnboardRoleRoleRoute = AuthOnboardRoleRoleRouteImport.update({
  id: '/_auth/onboard/role/$role',
  path: '/onboard/role/$role',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof AuthLoginRoute
  '/onboard': typeof OnboardOnboardRoute
  '/onboard/lecturer': typeof AuthOnboardLecturerRoute
  '/onboard/student': typeof AuthOnboardStudentRoute
  '/onboard/role/$role': typeof AuthOnboardRoleRoleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof AuthLoginRoute
  '/onboard': typeof OnboardOnboardRoute
  '/onboard/lecturer': typeof AuthOnboardLecturerRoute
  '/onboard/student': typeof AuthOnboardStudentRoute
  '/onboard/role/$role': typeof AuthOnboardRoleRoleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_onboard': typeof OnboardRouteRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_onboard/onboard': typeof OnboardOnboardRoute
  '/_auth/onboard/lecturer': typeof AuthOnboardLecturerRoute
  '/_auth/onboard/student': typeof AuthOnboardStudentRoute
  '/_auth/onboard/role/$role': typeof AuthOnboardRoleRoleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/onboard'
    | '/onboard/lecturer'
    | '/onboard/student'
    | '/onboard/role/$role'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/onboard'
    | '/onboard/lecturer'
    | '/onboard/student'
    | '/onboard/role/$role'
  id:
    | '__root__'
    | '/'
    | '/_onboard'
    | '/dashboard'
    | '/_auth/login'
    | '/_onboard/onboard'
    | '/_auth/onboard/lecturer'
    | '/_auth/onboard/student'
    | '/_auth/onboard/role/$role'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OnboardRouteRoute: typeof OnboardRouteRouteWithChildren
  DashboardRoute: typeof DashboardRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthOnboardLecturerRoute: typeof AuthOnboardLecturerRoute
  AuthOnboardStudentRoute: typeof AuthOnboardStudentRoute
  AuthOnboardRoleRoleRoute: typeof AuthOnboardRoleRoleRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboard': {
      id: '/_onboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboard/onboard': {
      id: '/_onboard/onboard'
      path: '/onboard'
      fullPath: '/onboard'
      preLoaderRoute: typeof OnboardOnboardRouteImport
      parentRoute: typeof OnboardRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/onboard/student': {
      id: '/_auth/onboard/student'
      path: '/onboard/student'
      fullPath: '/onboard/student'
      preLoaderRoute: typeof AuthOnboardStudentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/onboard/lecturer': {
      id: '/_auth/onboard/lecturer'
      path: '/onboard/lecturer'
      fullPath: '/onboard/lecturer'
      preLoaderRoute: typeof AuthOnboardLecturerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/onboard/role/$role': {
      id: '/_auth/onboard/role/$role'
      path: '/onboard/role/$role'
      fullPath: '/onboard/role/$role'
      preLoaderRoute: typeof AuthOnboardRoleRoleRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface OnboardRouteRouteChildren {
  OnboardOnboardRoute: typeof OnboardOnboardRoute
}

const OnboardRouteRouteChildren: OnboardRouteRouteChildren = {
  OnboardOnboardRoute: OnboardOnboardRoute,
}

const OnboardRouteRouteWithChildren = OnboardRouteRoute._addFileChildren(
  OnboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardRouteRoute: OnboardRouteRouteWithChildren,
  DashboardRoute: DashboardRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthOnboardLecturerRoute: AuthOnboardLecturerRoute,
  AuthOnboardStudentRoute: AuthOnboardStudentRoute,
  AuthOnboardRoleRoleRoute: AuthOnboardRoleRoleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
