/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as OnboardRouteRouteImport } from './routes/_onboard/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardRoleRouteImport } from './routes/_onboard/role'
import { Route as OnboardOnboardRouteImport } from './routes/_onboard/onboard'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as DashboardRoleRouteRouteImport } from './routes/dashboard/$role/route'
import { Route as DashboardRoleIndexRouteImport } from './routes/dashboard/$role/index'
import { Route as DashboardRoleCoursesRouteImport } from './routes/dashboard/$role/courses'
import { Route as DashboardRoleCoursesCourseIdRouteImport } from './routes/dashboard/$role/_courses.$courseId'
import { Route as DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRouteImport } from './routes/dashboard/$role/_courses.$lecturerCourseId.$attendanceSessionId'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardRouteRoute = OnboardRouteRouteImport.update({
  id: '/_onboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardRoleRoute = OnboardRoleRouteImport.update({
  id: '/role',
  path: '/role',
  getParentRoute: () => OnboardRouteRoute,
} as any)
const OnboardOnboardRoute = OnboardOnboardRouteImport.update({
  id: '/onboard',
  path: '/onboard',
  getParentRoute: () => OnboardRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardRoleRouteRoute = DashboardRoleRouteRouteImport.update({
  id: '/$role',
  path: '/$role',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardRoleIndexRoute = DashboardRoleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoleRouteRoute,
} as any)
const DashboardRoleCoursesRoute = DashboardRoleCoursesRouteImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => DashboardRoleRouteRoute,
} as any)
const DashboardRoleCoursesCourseIdRoute =
  DashboardRoleCoursesCourseIdRouteImport.update({
    id: '/_courses/$courseId',
    path: '/$courseId',
    getParentRoute: () => DashboardRoleRouteRoute,
  } as any)
const DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute =
  DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRouteImport.update({
    id: '/_courses/$lecturerCourseId/$attendanceSessionId',
    path: '/$lecturerCourseId/$attendanceSessionId',
    getParentRoute: () => DashboardRoleRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/$role': typeof DashboardRoleRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/onboard': typeof OnboardOnboardRoute
  '/role': typeof OnboardRoleRoute
  '/dashboard/$role/courses': typeof DashboardRoleCoursesRoute
  '/dashboard/$role/': typeof DashboardRoleIndexRoute
  '/dashboard/$role/$courseId': typeof DashboardRoleCoursesCourseIdRoute
  '/dashboard/$role/$lecturerCourseId/$attendanceSessionId': typeof DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/onboard': typeof OnboardOnboardRoute
  '/role': typeof OnboardRoleRoute
  '/dashboard/$role/courses': typeof DashboardRoleCoursesRoute
  '/dashboard/$role': typeof DashboardRoleIndexRoute
  '/dashboard/$role/$courseId': typeof DashboardRoleCoursesCourseIdRoute
  '/dashboard/$role/$lecturerCourseId/$attendanceSessionId': typeof DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_onboard': typeof OnboardRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/$role': typeof DashboardRoleRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_onboard/onboard': typeof OnboardOnboardRoute
  '/_onboard/role': typeof OnboardRoleRoute
  '/dashboard/$role/courses': typeof DashboardRoleCoursesRoute
  '/dashboard/$role/': typeof DashboardRoleIndexRoute
  '/dashboard/$role/_courses/$courseId': typeof DashboardRoleCoursesCourseIdRoute
  '/dashboard/$role/_courses/$lecturerCourseId/$attendanceSessionId': typeof DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/$role'
    | '/login'
    | '/onboard'
    | '/role'
    | '/dashboard/$role/courses'
    | '/dashboard/$role/'
    | '/dashboard/$role/$courseId'
    | '/dashboard/$role/$lecturerCourseId/$attendanceSessionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/onboard'
    | '/role'
    | '/dashboard/$role/courses'
    | '/dashboard/$role'
    | '/dashboard/$role/$courseId'
    | '/dashboard/$role/$lecturerCourseId/$attendanceSessionId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_onboard'
    | '/dashboard'
    | '/dashboard/$role'
    | '/_auth/login'
    | '/_onboard/onboard'
    | '/_onboard/role'
    | '/dashboard/$role/courses'
    | '/dashboard/$role/'
    | '/dashboard/$role/_courses/$courseId'
    | '/dashboard/$role/_courses/$lecturerCourseId/$attendanceSessionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  OnboardRouteRoute: typeof OnboardRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboard': {
      id: '/_onboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboard/role': {
      id: '/_onboard/role'
      path: '/role'
      fullPath: '/role'
      preLoaderRoute: typeof OnboardRoleRouteImport
      parentRoute: typeof OnboardRouteRoute
    }
    '/_onboard/onboard': {
      id: '/_onboard/onboard'
      path: '/onboard'
      fullPath: '/onboard'
      preLoaderRoute: typeof OnboardOnboardRouteImport
      parentRoute: typeof OnboardRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dashboard/$role': {
      id: '/dashboard/$role'
      path: '/$role'
      fullPath: '/dashboard/$role'
      preLoaderRoute: typeof DashboardRoleRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/$role/': {
      id: '/dashboard/$role/'
      path: '/'
      fullPath: '/dashboard/$role/'
      preLoaderRoute: typeof DashboardRoleIndexRouteImport
      parentRoute: typeof DashboardRoleRouteRoute
    }
    '/dashboard/$role/courses': {
      id: '/dashboard/$role/courses'
      path: '/courses'
      fullPath: '/dashboard/$role/courses'
      preLoaderRoute: typeof DashboardRoleCoursesRouteImport
      parentRoute: typeof DashboardRoleRouteRoute
    }
    '/dashboard/$role/_courses/$courseId': {
      id: '/dashboard/$role/_courses/$courseId'
      path: '/$courseId'
      fullPath: '/dashboard/$role/$courseId'
      preLoaderRoute: typeof DashboardRoleCoursesCourseIdRouteImport
      parentRoute: typeof DashboardRoleRouteRoute
    }
    '/dashboard/$role/_courses/$lecturerCourseId/$attendanceSessionId': {
      id: '/dashboard/$role/_courses/$lecturerCourseId/$attendanceSessionId'
      path: '/$lecturerCourseId/$attendanceSessionId'
      fullPath: '/dashboard/$role/$lecturerCourseId/$attendanceSessionId'
      preLoaderRoute: typeof DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRouteImport
      parentRoute: typeof DashboardRoleRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface OnboardRouteRouteChildren {
  OnboardOnboardRoute: typeof OnboardOnboardRoute
  OnboardRoleRoute: typeof OnboardRoleRoute
}

const OnboardRouteRouteChildren: OnboardRouteRouteChildren = {
  OnboardOnboardRoute: OnboardOnboardRoute,
  OnboardRoleRoute: OnboardRoleRoute,
}

const OnboardRouteRouteWithChildren = OnboardRouteRoute._addFileChildren(
  OnboardRouteRouteChildren,
)

interface DashboardRoleRouteRouteChildren {
  DashboardRoleCoursesRoute: typeof DashboardRoleCoursesRoute
  DashboardRoleIndexRoute: typeof DashboardRoleIndexRoute
  DashboardRoleCoursesCourseIdRoute: typeof DashboardRoleCoursesCourseIdRoute
  DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute: typeof DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute
}

const DashboardRoleRouteRouteChildren: DashboardRoleRouteRouteChildren = {
  DashboardRoleCoursesRoute: DashboardRoleCoursesRoute,
  DashboardRoleIndexRoute: DashboardRoleIndexRoute,
  DashboardRoleCoursesCourseIdRoute: DashboardRoleCoursesCourseIdRoute,
  DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute:
    DashboardRoleCoursesLecturerCourseIdAttendanceSessionIdRoute,
}

const DashboardRoleRouteRouteWithChildren =
  DashboardRoleRouteRoute._addFileChildren(DashboardRoleRouteRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardRoleRouteRoute: typeof DashboardRoleRouteRouteWithChildren
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardRoleRouteRoute: DashboardRoleRouteRouteWithChildren,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  OnboardRouteRoute: OnboardRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
